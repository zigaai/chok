<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zigaai.mapper.DaoOauth2RegisteredClientMapper">
    <!--@Table `oauth2_registered_client`-->
    <resultMap id="BaseResultMap" type="com.zigaai.model.entity.Oauth2RegisteredClient">
        <id column="client_id" jdbcType="VARBINARY" property="clientId" />
        <result column="client_id" jdbcType="VARCHAR" property="clientId" />
        <result column="client_id_issued_at" jdbcType="TIMESTAMP" property="clientIdIssuedAt" />
        <result column="client_secret" jdbcType="VARCHAR" property="clientSecret" />
        <result column="client_secret_expires_at" jdbcType="TIMESTAMP" property="clientSecretExpiresAt" />
        <result column="client_name" jdbcType="VARCHAR" property="clientName" />
        <result column="client_authentication_methods" jdbcType="VARCHAR" property="clientAuthenticationMethods" />
        <result column="authorization_grant_types" jdbcType="VARCHAR" property="authorizationGrantTypes" />
        <result column="redirect_uris" jdbcType="VARCHAR" property="redirectUris" />
        <result column="scopes" jdbcType="VARCHAR" property="scopes" />
        <result column="client_settings" jdbcType="VARCHAR" property="clientSettings" />
        <result column="token_settings" jdbcType="VARCHAR" property="tokenSettings" />
        <result column="post_logout_redirect_uris" jdbcType="VARCHAR" property="postLogoutRedirectUris" />
        <result column="deleted" jdbcType="TINYINT" property="deleted" />
    </resultMap>

    <sql id="Base_Column_List">
        client_id, client_id_issued_at, client_secret, client_secret_expires_at, client_name, client_authentication_methods, authorization_grant_types, redirect_uris, scopes, client_settings, token_settings, post_logout_redirect_uris, deleted
    </sql>

    <sql id="Page_Column_List">
        client_id, client_id_issued_at, client_secret_expires_at, client_name, client_authentication_methods, authorization_grant_types, redirect_uris, scopes, client_settings, token_settings, post_logout_redirect_uris, deleted
    </sql>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zigaai.model.entity.Oauth2RegisteredClient" useGeneratedKeys="true">
        insert into `oauth2_registered_client`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                client_id,
            </if>
            <if test="clientIdIssuedAt != null">
                client_id_issued_at,
            </if>
            <if test="clientSecret != null">
                client_secret,
            </if>
            <if test="clientSecretExpiresAt != null">
                client_secret_expires_at,
            </if>
            <if test="clientName != null">
                client_name,
            </if>
            <if test="clientAuthenticationMethods != null">
                client_authentication_methods,
            </if>
            <if test="authorizationGrantTypes != null">
                authorization_grant_types,
            </if>
            <if test="redirectUris != null">
                redirect_uris,
            </if>
            <if test="scopes != null">
                scopes,
            </if>
            <if test="clientSettings != null">
                client_settings,
            </if>
            <if test="tokenSettings != null">
                token_settings,
            </if>
            <if test="postLogoutRedirectUris != null">
                post_logout_redirect_uris,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="clientIdIssuedAt != null">
                #{clientIdIssuedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="clientSecret != null">
                #{clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="clientSecretExpiresAt != null">
                #{clientSecretExpiresAt,jdbcType=TIMESTAMP},
            </if>
            <if test="clientName != null">
                #{clientName,jdbcType=VARCHAR},
            </if>
            <if test="clientAuthenticationMethods != null">
                #{clientAuthenticationMethods,jdbcType=VARCHAR},
            </if>
            <if test="authorizationGrantTypes != null">
                #{authorizationGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="redirectUris != null">
                #{redirectUris,jdbcType=VARCHAR},
            </if>
            <if test="scopes != null">
                #{scopes,jdbcType=VARCHAR},
            </if>
            <if test="clientSettings != null">
                #{clientSettings,jdbcType=VARCHAR},
            </if>
            <if test="tokenSettings != null">
                #{tokenSettings,jdbcType=VARCHAR},
            </if>
            <if test="postLogoutRedirectUris != null">
                #{postLogoutRedirectUris,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.zigaai.model.entity.Oauth2RegisteredClient">
      update `oauth2_registered_client`
      <set>
        <if test="et.clientIdIssuedAt != null">
            client_id_issued_at = #{et.clientIdIssuedAt,jdbcType=TIMESTAMP},
        </if>
        <if test="et.clientSecret != null">
            client_secret = #{et.clientSecret,jdbcType=VARCHAR},
        </if>
        <if test="et.clientSecretExpiresAt != null">
            client_secret_expires_at = #{et.clientSecretExpiresAt,jdbcType=TIMESTAMP},
        </if>
        <if test="et.clientName != null">
            client_name = #{et.clientName,jdbcType=VARCHAR},
        </if>
        <if test="et.clientAuthenticationMethods != null">
            client_authentication_methods = #{et.clientAuthenticationMethods,jdbcType=VARCHAR},
        </if>
        <if test="et.authorizationGrantTypes != null">
            authorization_grant_types = #{et.authorizationGrantTypes,jdbcType=VARCHAR},
        </if>
        <if test="et.redirectUris != null">
            redirect_uris = #{et.redirectUris,jdbcType=VARCHAR},
        </if>
        <if test="et.scopes != null">
            scopes = #{et.scopes,jdbcType=VARCHAR},
        </if>
        <if test="et.clientSettings != null">
            client_settings = #{et.clientSettings,jdbcType=VARCHAR},
        </if>
        <if test="et.tokenSettings != null">
            token_settings = #{et.tokenSettings,jdbcType=VARCHAR},
        </if>
        <if test="et.postLogoutRedirectUris != null">
            post_logout_redirect_uris = #{et.postLogoutRedirectUris,jdbcType=VARCHAR},
        </if>
      </set>
      where client_id = #{et.clientId,jdbcType=BIGINT}
    </update>

    <insert id="insertBatch" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
      insert into `oauth2_registered_client`
      (client_id, client_id_issued_at, client_secret, client_secret_expires_at, client_name, client_authentication_methods, authorization_grant_types, redirect_uris, scopes, client_settings, token_settings, post_logout_redirect_uris)
      values
      <foreach collection="entityList" item="item" separator=",">
      (#{item.clientId,jdbcType=VARCHAR}, #{item.clientIdIssuedAt,jdbcType=TIMESTAMP}, #{item.clientSecret,jdbcType=VARCHAR}, #{item.clientSecretExpiresAt,jdbcType=TIMESTAMP}, #{item.clientName,jdbcType=VARCHAR}, #{item.clientAuthenticationMethods,jdbcType=VARCHAR}, #{item.authorizationGrantTypes,jdbcType=VARCHAR}, #{item.redirectUris,jdbcType=VARCHAR}, #{item.scopes,jdbcType=VARCHAR}, #{item.clientSettings,jdbcType=VARCHAR}, #{item.tokenSettings,jdbcType=VARCHAR}, #{item.postLogoutRedirectUris,jdbcType=VARCHAR})
      </foreach>
    </insert>

    <update id="updateBatchById" parameterType="java.util.Collection">
      update `oauth2_registered_client`
      <trim prefix="set" suffixOverrides=",">
        <trim prefix="client_id_issued_at = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.clientIdIssuedAt != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.clientIdIssuedAt,jdbcType=TIMESTAMP}
            </if>
          </foreach>
        </trim>
        <trim prefix="client_secret = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.clientSecret != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.clientSecret,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="client_secret_expires_at = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.clientSecretExpiresAt != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.clientSecretExpiresAt,jdbcType=TIMESTAMP}
            </if>
          </foreach>
        </trim>
        <trim prefix="client_name = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.clientName != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.clientName,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="client_authentication_methods = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.clientAuthenticationMethods != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.clientAuthenticationMethods,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="authorization_grant_types = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.authorizationGrantTypes != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.authorizationGrantTypes,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="redirect_uris = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.redirectUris != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.redirectUris,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="scopes = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.scopes != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.scopes,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="client_settings = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.clientSettings != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.clientSettings,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="token_settings = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.tokenSettings != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.tokenSettings,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
        <trim prefix="post_logout_redirect_uris = case" suffix="end,">
          <foreach collection="entityList" index="index" item="item">
            <if test="item.postLogoutRedirectUris != null">
                when client_id = #{item.clientId,jdbcType=VARCHAR} then #{item.postLogoutRedirectUris,jdbcType=VARCHAR}
            </if>
          </foreach>
        </trim>
      </trim>
      where client_id in
      <foreach close=")" collection="entityList" item="item" open="(" separator=", ">
        #{item.clientId,jdbcType=BIGINT}
      </foreach>
    </update>

    <sql id="Dynamic_Column">
        <choose>
            <when test="columns != null and columns.length != 0">
                <foreach collection="columns" item="item" separator=",">
                    ${item}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List"/>
            </otherwise>
        </choose>
    </sql>

    <select id="getById" parameterType="Long" resultMap="BaseResultMap">
        select <include refid="Dynamic_Column" />
        from `oauth2_registered_client`
        where client_id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="listByIds" resultMap="BaseResultMap">
        select <include refid="Dynamic_Column" />
        from `oauth2_registered_client`
        where client_id in
        <foreach collection="ids" close=")" item="item" open="(" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>

    <update id="deleteById" parameterType="Long">
        delete from `oauth2_registered_client`
        where client_id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="deleteBatchByIds">
        delete from `oauth2_registered_client`
        where client_id in
        <foreach collection="ids" separator="," item="item" close=")" open="(">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="getByClientId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from oauth2_registered_client
        where client_id = #{clientId,jdbcType=VARCHAR}
        and deleted = 0
    </select>

    <select id="page" resultMap="BaseResultMap">
        select <include refid="Page_Column_List" />
        from oauth2_registered_client
        <where>
            <if test="params.clientId != null and params.clientId != ''">
                <bind name="clientId" value="params.clientId + '%'"/>
                client_id like #{clientId,jdbcType=VARCHAR}
            </if>
            <if test="params.clientName != null and params.clientName != ''">
                <bind name="clientName" value="params.clientName +'%'"/>
                and client_name like #{clientName,jdbcType=VARCHAR}
            </if>
            <if test="params.clientAuthenticationMethods != null and params.clientAuthenticationMethods != ''">
                <bind name="clientAuthenticationMethods" value="params.clientAuthenticationMethods +'%'"/>
                and client_authentication_methods like #{clientAuthenticationMethods,jdbcType=VARCHAR}
            </if>
            <if test="params.authorizationGrantTypes != null and params.authorizationGrantTypes != ''">
                <bind name="authorizationGrantTypes" value="params.authorizationGrantTypes +'%'"/>
                and authorization_grant_types like #{authorizationGrantTypes,jdbcType=VARCHAR}
            </if>
            <if test="params.redirectUris != null and params.redirectUris != ''">
                <bind name="redirectUris" value="params.redirectUris+'%'"/>
                and redirect_uris like #{redirectUris,jdbcType=VARCHAR}
            </if>
            <if test="params.scopes != null and params.scopes != ''">
                <bind name="scopes" value="params.scopes+'%'"/>
                and scopes like #{scopes,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <update id="updateStateBatch">
        update `oauth2_registered_client`
        <set>
            deleted = #{data.deleted,jdbcType=TINYINT}
        </set>
        where client_id in
        <foreach collection="data.clientIds" close=")" open="(" item="item" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </update>
</mapper>
